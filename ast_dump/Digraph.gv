strict digraph {
	declarations [color=lightblue style=filled]
	Function [color=lightblue style=filled]
	declarations -> Function
	Function [color=lightblue style=filled]
	signature [color=lightblue style=filled]
	Function -> signature
	signature [color=lightblue style=filled]
	func_name [color=lightblue style=filled]
	signature -> func_name
	func_name [color=lightblue style=filled]
	main [color=maroon style=filled]
	func_name -> main
	signature -> ty_list
	ty_list [color=grey style=filled]
	signature -> ty_ret
	ty_ret [color=grey style=filled]
	Function [color=lightblue style=filled]
	definition [color=lightblue style=filled]
	Function -> definition
	definition [color=lightblue style=filled]
	func_name [color=lightblue style=filled]
	definition -> func_name
	func_name [color=lightblue style=filled]
	main [color=maroon style=filled]
	func_name -> main
	definition -> arg_list
	arg_list [color=grey style=filled]
	definition [color=lightblue style=filled]
	block [color=lightblue style=filled]
	definition -> block
	block -> statements
	statements [color=lightblue style=filled]
	VarBindingInit [color=lightblue style=filled]
	statements -> VarBindingInit
	VarBindingInit [color=lightblue style=filled]
	bind_name [color=lightblue style=filled]
	VarBindingInit -> bind_name
	bind_name [color=lightblue style=filled]
	x [color=maroon style=filled]
	bind_name -> x
	VarBindingInit -> ty_hint
	ty_hint [color=grey style=filled]
	VarBindingInit [color=lightblue style=filled]
	expr [color=lightblue style=filled]
	VarBindingInit -> expr
	expr [color=lightblue style=filled]
	Atom [color=lightblue style=filled]
	expr -> Atom
	Atom [color=lightblue style=filled]
	1 [color=maroon style=filled]
	Atom -> 1
	block -> expression
	expression [color=grey style=filled]
}
